Pai(i)
    return i/2

Filho-Esquerda(i)
    return 2*i

Filho-Direita(i)
    return 2*i + 1

Max-Heapify(A, i)
    esquerda = Filho-Esquerda(i)
    direita = Filho-Direita(i)

    ind_maior = NIL

    if esquerda <= A.heap-size and A[esquerda] > A[i]
        ind_maior = esquerda
    else 
        ind_maior = i

    if direita <= A.heap-size and A[direita] > A[ind_maior]
        ind_maior = direita
    else 
        ind_maior = i

    if ind_maior != i 
        temp = A[i]
        A[i] = A[ind_maior]
        A[ind_maior] = temp     

    Max-Heapify(A, ind_maior)

Inicializa-Max-Heap(A)
    A.heap-size = A.tamanho

    for i = A.heap-size/2 downto i
        Max-Heapify(A, i)