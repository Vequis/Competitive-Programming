List-Search(L, k) // Retorna NIL se k !E L  
    x = L.inicio
    while x != NIL and x.chave != k
        x = x.proximo

    return x

List-Insert(L,x) //No come√ßo da lista
    x.proximo = L.inicio

    if L.inicio != NIL
        L.inicio.anterior = x

    x.anterior = NIL
    L.inicio = x

List-Delete(L, x)
    if x.anterior != NIL
        x.anterior.proximo = x.proximo
    else L.inicio = x.proximo

    if x.proximo != NIL
        x.proximo.anterior = x.anterior


List-Insert-End(L, k)
    Seja e um novo elemento
    e.chave = k
    e.proximo = NIL

List-Replace(L, k, x)
    buscador != L.inicio
    while buscador != NIL && buscador.chave != k    
        buscador = buscador.proximo

    if buscador != NIL
        if buscador.anterior != NIL
            buscador.anterior.proximo = x
        else L.inicio = x

        if buscador.proximo != NIL
            buscador.proximo.anterior = x

        x.proximo = buscador.proximo
        x.anterior = proximo.anterior


Main()
    Seja L uma nova ListaLigada

    Seja e1 um novo elemento
    e1.chave = 4;
    e1.proximo = NIL
    List-Insert(L, e1)
    
    Seja e1 um novo elemento
    e1.chave = 4;
    e1.proximo = NIL
    List-Insert(L, e1)


